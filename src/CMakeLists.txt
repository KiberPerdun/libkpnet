set(SOURCES main.c arp_fill_hdr.c arp_fill_eth.c
        ../include/sctp.h
        ../include/ipv4.h
        fill_ipv4.c
        eth_open.c
        eth_close.c
        eth_send.c
        ../include/udp.h
        fill_udp.c
        ../include/ipv6.h
        ../include/tcp.h
        tcp_fill_init_hdr.c
        tcp_fill_opt_mss.c
        tcp_checksum.c
        build_tcp_init_hdr.c
        build_tcp_raw.c
        ../include/mac.h
        build_mac_client_raw.c
        ../include/if_packet.h
        if_ipv4.c
        recv_filtered.c
        if_tcp.c
        if_ipv4_tcp.c
        build_tcp_ack_hdr.c
        tcp_make_handshake.c
        tcp_get_html.c
        build_tcp_payload_hdr.c
        build_tcp_syn_ack_hdr.c
        build_sctp_hdr_raw.c
        if_ipv4_sctp.c
        if_sctp.c
        generate_crc32c.c
        create_client.c
        create_server.c
        ../include/get_random.h
        get_random_u32.c
        get_random_u64.c
        get_random.c
        ../include/checks.h
        fix_check.c
        fix_check_ip_tcp.c
        build_mac.c
        build_ip_raw.c
        build_mac_raw.c
        fix_check_ip.c
        get_random_u16.c
        ip_checksum.c
        ../include/dhcp.h
        build_tcp_opt_mss.c
        build_sctp_cmn_hdr_raw.c
        build_sctp_init_hdr.c
        build_sctp_fld_hdr_raw.c
        fix_check_ip_sctp.c
        setup_bpf_filter.c
        recv_packet.c
        if_ip_sctp.c
        if_ip_tcp.c
        build_sctp_init_ack_hdr.c
        ../include/netlink.h
        netlink_open.c
        netlink_close.c
        create_veth_pair.c
        get_ifid.c
        delete_if.c
        up_if.c
        bind_if.c
        build_sctp_cookie_echo_hdr.c
        build_sctp_init_hdr_raw.c
        build_sctp_init_ack_hdr_raw.c
        build_sctp_cookie_param_raw.c
        build_sctp_cookie_echo_hdr_raw.c
        build_sctp_cookie_ack_hdr.c
        get_ifmac.c
        get_iftype.c
        ../include/md5.h
        md5.c
        ../include/ring_buffer.h
        init_ring_buffer.c
        free_ring_buffer.c
)

add_executable(src ${SOURCES})
target_include_directories(src PRIVATE ${PROJECT_SOURCE_DIR}/include)
